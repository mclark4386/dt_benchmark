variables:
  CI_REGISTRY: cpsg-git.mattclark.guru:4567
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  RELEASE_TAG: $CI_REGISTRY_IMAGE:latest

stages:
  - build
  - package
  - release

.test-vars: &test-vars
  variables:
    GO_ENV: "test"
    POSTGRES_DB: "dt_benchmark_test"
    TEST_DATABASE_URL: "postgres://postgres:postgres@postgres:5432/dt_benchmark_test?sslmode=disable"

sast:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]


build:test:
  image: gobuffalo/buffalo:latest
  <<: *test-vars
  services:
    - postgres:latest
  stage: build
  script:
    - apt-get update && apt-get install -y postgresql-client
    - ln -s /builds $GOPATH/src/$(echo "cpsg-git.mattclark.guru/highlands/dt_benchmark" | cut -d "/" -f1)
    - cd $GOPATH/src/cpsg-git.mattclark.guru/highlands/dt_benchmark
    - yarn install --no-progess
    - dep ensure
    - buffalo test
    - buffalo build --static -o $CI_PROJECT_DIR/app
  artifacts:
    paths:
      - app

package-image:
  image: docker:latest
  services:
    - docker:dind
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG -f ./Dockerfile-gitlab .
    - docker push $IMAGE_TAG
  dependencies:
    - build:test

release-image:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $RELEASE_TAG
    - docker push $RELEASE_TAG
  only:
    - master
