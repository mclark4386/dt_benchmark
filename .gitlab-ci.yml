variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  RELEASE_TAG: $CI_REGISTRY_IMAGE:latest

stages:
  - build
  - package
  - release

.test-vars: &test-vars
  variables:
    GO_ENV: "test"
    POSTGRES_DB: "dt_benchmark_test"
    TEST_DATABASE_URL: "postgres://postgres:postgres@postgres:5432/dt_benchmark_test?sslmode=disable"

build:test:
  image: gobuffalo/buffalo:latest
  <<: *test-vars
  services:
    - postgres:latest
  stage: build
  script:
    - apt-get update && apt-get install -y postgresql-client
    - ln -s /builds $GOPATH/src/cpsg-git.mattclark.guru/highlands/dt_benchmark
    - cd $GOPATH/src/cpsg-git.mattclark.guru/highlands/dt_benchmark
    - yarn install --no-progess
    - go get $(go list ./...)
    - buffalo test
    - buffalo build --static -o $CI_PROJECT_DIR/app
  artifacts:
    paths:
      - app

package-image:
  image: docker:latest
  services:
    - docker:dind
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG -f ./Dockerfile-gitlab .
    - docker push $IMAGE_TAG
  dependencies:
    - build:test

release-image:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $RELEASE_TAG
    - docker push $RELEASE_TAG
  only:
    - master
